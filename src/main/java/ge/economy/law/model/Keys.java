/**
 * This class is generated by jOOQ
 */
package ge.economy.law.model;


import ge.economy.law.model.tables.Case;
import ge.economy.law.model.tables.Court;
import ge.economy.law.model.tables.CourtInstance;
import ge.economy.law.model.tables.CourtInstanceHistory;
import ge.economy.law.model.tables.EndResult;
import ge.economy.law.model.tables.Judge;
import ge.economy.law.model.tables.LitigationSubject;
import ge.economy.law.model.tables.Status;
import ge.economy.law.model.tables.User;
import ge.economy.law.model.tables.UserStatus;
import ge.economy.law.model.tables.UserType;
import ge.economy.law.model.tables.records.CaseRecord;
import ge.economy.law.model.tables.records.CourtInstanceHistoryRecord;
import ge.economy.law.model.tables.records.CourtInstanceRecord;
import ge.economy.law.model.tables.records.CourtRecord;
import ge.economy.law.model.tables.records.EndResultRecord;
import ge.economy.law.model.tables.records.JudgeRecord;
import ge.economy.law.model.tables.records.LitigationSubjectRecord;
import ge.economy.law.model.tables.records.StatusRecord;
import ge.economy.law.model.tables.records.UserRecord;
import ge.economy.law.model.tables.records.UserStatusRecord;
import ge.economy.law.model.tables.records.UserTypeRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<CaseRecord, Integer> IDENTITY_CASE = Identities0.IDENTITY_CASE;
	public static final Identity<CourtRecord, Integer> IDENTITY_COURT = Identities0.IDENTITY_COURT;
	public static final Identity<CourtInstanceRecord, Integer> IDENTITY_COURT_INSTANCE = Identities0.IDENTITY_COURT_INSTANCE;
	public static final Identity<CourtInstanceHistoryRecord, Integer> IDENTITY_COURT_INSTANCE_HISTORY = Identities0.IDENTITY_COURT_INSTANCE_HISTORY;
	public static final Identity<EndResultRecord, Integer> IDENTITY_END_RESULT = Identities0.IDENTITY_END_RESULT;
	public static final Identity<JudgeRecord, Integer> IDENTITY_JUDGE = Identities0.IDENTITY_JUDGE;
	public static final Identity<LitigationSubjectRecord, Integer> IDENTITY_LITIGATION_SUBJECT = Identities0.IDENTITY_LITIGATION_SUBJECT;
	public static final Identity<StatusRecord, Integer> IDENTITY_STATUS = Identities0.IDENTITY_STATUS;
	public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
	public static final Identity<UserStatusRecord, Integer> IDENTITY_USER_STATUS = Identities0.IDENTITY_USER_STATUS;
	public static final Identity<UserTypeRecord, Integer> IDENTITY_USER_TYPE = Identities0.IDENTITY_USER_TYPE;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<CaseRecord> CASE_PKEY = UniqueKeys0.CASE_PKEY;
	public static final UniqueKey<CourtRecord> COURT_PKEY = UniqueKeys0.COURT_PKEY;
	public static final UniqueKey<CourtInstanceRecord> COURT_INSTANCE_PKEY1 = UniqueKeys0.COURT_INSTANCE_PKEY1;
	public static final UniqueKey<CourtInstanceHistoryRecord> COURT_INSTANCE_PKEY = UniqueKeys0.COURT_INSTANCE_PKEY;
	public static final UniqueKey<EndResultRecord> END_RESULT_PKEY = UniqueKeys0.END_RESULT_PKEY;
	public static final UniqueKey<JudgeRecord> JUDGE_PKEY = UniqueKeys0.JUDGE_PKEY;
	public static final UniqueKey<LitigationSubjectRecord> LITIGATION_SUBJECT_PKEY = UniqueKeys0.LITIGATION_SUBJECT_PKEY;
	public static final UniqueKey<StatusRecord> STATUS_PKEY = UniqueKeys0.STATUS_PKEY;
	public static final UniqueKey<UserRecord> USER_PKEY = UniqueKeys0.USER_PKEY;
	public static final UniqueKey<UserRecord> UNIQ_USRNM = UniqueKeys0.UNIQ_USRNM;
	public static final UniqueKey<UserStatusRecord> USER_STATUS_PKEY = UniqueKeys0.USER_STATUS_PKEY;
	public static final UniqueKey<UserTypeRecord> USER_TYPE_PKEY = UniqueKeys0.USER_TYPE_PKEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<CaseRecord, JudgeRecord> CASE__FK_CASE_TO_JUDGE = ForeignKeys0.CASE__FK_CASE_TO_JUDGE;
	public static final ForeignKey<CaseRecord, LitigationSubjectRecord> CASE__FK_LITIGATION_SUBJECT_ID = ForeignKeys0.CASE__FK_LITIGATION_SUBJECT_ID;
	public static final ForeignKey<CaseRecord, EndResultRecord> CASE__FK_CASE_TO_END_RESULT = ForeignKeys0.CASE__FK_CASE_TO_END_RESULT;
	public static final ForeignKey<CaseRecord, CourtRecord> CASE__FK_CASE_TO_COURT = ForeignKeys0.CASE__FK_CASE_TO_COURT;
	public static final ForeignKey<UserRecord, UserTypeRecord> USER__FK_USER_TO_TYPE = ForeignKeys0.USER__FK_USER_TO_TYPE;
	public static final ForeignKey<UserRecord, StatusRecord> USER__FK_USER_TO_STATUS = ForeignKeys0.USER__FK_USER_TO_STATUS;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<CaseRecord, Integer> IDENTITY_CASE = createIdentity(Case.CASE, Case.CASE.CASE_ID);
		public static Identity<CourtRecord, Integer> IDENTITY_COURT = createIdentity(Court.COURT, Court.COURT.COURT_ID);
		public static Identity<CourtInstanceRecord, Integer> IDENTITY_COURT_INSTANCE = createIdentity(CourtInstance.COURT_INSTANCE, CourtInstance.COURT_INSTANCE.INSTANCE_ID);
		public static Identity<CourtInstanceHistoryRecord, Integer> IDENTITY_COURT_INSTANCE_HISTORY = createIdentity(CourtInstanceHistory.COURT_INSTANCE_HISTORY, CourtInstanceHistory.COURT_INSTANCE_HISTORY.ID);
		public static Identity<EndResultRecord, Integer> IDENTITY_END_RESULT = createIdentity(EndResult.END_RESULT, EndResult.END_RESULT.END_RESULT_ID);
		public static Identity<JudgeRecord, Integer> IDENTITY_JUDGE = createIdentity(Judge.JUDGE, Judge.JUDGE.JUDGE_ID);
		public static Identity<LitigationSubjectRecord, Integer> IDENTITY_LITIGATION_SUBJECT = createIdentity(LitigationSubject.LITIGATION_SUBJECT, LitigationSubject.LITIGATION_SUBJECT.LITIGATION_SUBJECT_ID);
		public static Identity<StatusRecord, Integer> IDENTITY_STATUS = createIdentity(Status.STATUS, Status.STATUS.STATUS_ID);
		public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.USER_ID);
		public static Identity<UserStatusRecord, Integer> IDENTITY_USER_STATUS = createIdentity(UserStatus.USER_STATUS, UserStatus.USER_STATUS.STATUS_ID);
		public static Identity<UserTypeRecord, Integer> IDENTITY_USER_TYPE = createIdentity(UserType.USER_TYPE, UserType.USER_TYPE.TYPE_ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<CaseRecord> CASE_PKEY = createUniqueKey(Case.CASE, Case.CASE.CASE_ID);
		public static final UniqueKey<CourtRecord> COURT_PKEY = createUniqueKey(Court.COURT, Court.COURT.COURT_ID);
		public static final UniqueKey<CourtInstanceRecord> COURT_INSTANCE_PKEY1 = createUniqueKey(CourtInstance.COURT_INSTANCE, CourtInstance.COURT_INSTANCE.INSTANCE_ID);
		public static final UniqueKey<CourtInstanceHistoryRecord> COURT_INSTANCE_PKEY = createUniqueKey(CourtInstanceHistory.COURT_INSTANCE_HISTORY, CourtInstanceHistory.COURT_INSTANCE_HISTORY.ID);
		public static final UniqueKey<EndResultRecord> END_RESULT_PKEY = createUniqueKey(EndResult.END_RESULT, EndResult.END_RESULT.END_RESULT_ID);
		public static final UniqueKey<JudgeRecord> JUDGE_PKEY = createUniqueKey(Judge.JUDGE, Judge.JUDGE.JUDGE_ID);
		public static final UniqueKey<LitigationSubjectRecord> LITIGATION_SUBJECT_PKEY = createUniqueKey(LitigationSubject.LITIGATION_SUBJECT, LitigationSubject.LITIGATION_SUBJECT.LITIGATION_SUBJECT_ID);
		public static final UniqueKey<StatusRecord> STATUS_PKEY = createUniqueKey(Status.STATUS, Status.STATUS.STATUS_ID);
		public static final UniqueKey<UserRecord> USER_PKEY = createUniqueKey(User.USER, User.USER.USER_ID);
		public static final UniqueKey<UserRecord> UNIQ_USRNM = createUniqueKey(User.USER, User.USER.USERNAME);
		public static final UniqueKey<UserStatusRecord> USER_STATUS_PKEY = createUniqueKey(UserStatus.USER_STATUS, UserStatus.USER_STATUS.STATUS_ID);
		public static final UniqueKey<UserTypeRecord> USER_TYPE_PKEY = createUniqueKey(UserType.USER_TYPE, UserType.USER_TYPE.TYPE_ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<CaseRecord, JudgeRecord> CASE__FK_CASE_TO_JUDGE = createForeignKey(ge.economy.law.model.Keys.JUDGE_PKEY, Case.CASE, Case.CASE.JUDGE_ID);
		public static final ForeignKey<CaseRecord, LitigationSubjectRecord> CASE__FK_LITIGATION_SUBJECT_ID = createForeignKey(ge.economy.law.model.Keys.LITIGATION_SUBJECT_PKEY, Case.CASE, Case.CASE.LITIGATION_SUBJECT_ID);
		public static final ForeignKey<CaseRecord, EndResultRecord> CASE__FK_CASE_TO_END_RESULT = createForeignKey(ge.economy.law.model.Keys.END_RESULT_PKEY, Case.CASE, Case.CASE.END_RESULT_ID);
		public static final ForeignKey<CaseRecord, CourtRecord> CASE__FK_CASE_TO_COURT = createForeignKey(ge.economy.law.model.Keys.COURT_PKEY, Case.CASE, Case.CASE.COURT_ID);
		public static final ForeignKey<UserRecord, UserTypeRecord> USER__FK_USER_TO_TYPE = createForeignKey(ge.economy.law.model.Keys.USER_TYPE_PKEY, User.USER, User.USER.TYPE_ID);
		public static final ForeignKey<UserRecord, StatusRecord> USER__FK_USER_TO_STATUS = createForeignKey(ge.economy.law.model.Keys.STATUS_PKEY, User.USER, User.USER.STATUS_ID);
	}
}
