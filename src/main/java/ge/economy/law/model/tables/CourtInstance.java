/**
 * This class is generated by jOOQ
 */
package ge.economy.law.model.tables;


import ge.economy.law.model.Keys;
import ge.economy.law.model.Public;
import ge.economy.law.model.tables.records.CourtInstanceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourtInstance extends TableImpl<CourtInstanceRecord> {

	private static final long serialVersionUID = -308199769;

	/**
	 * The reference instance of <code>public.court_instance</code>
	 */
	public static final CourtInstance COURT_INSTANCE = new CourtInstance();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CourtInstanceRecord> getRecordType() {
		return CourtInstanceRecord.class;
	}

	/**
	 * The column <code>public.court_instance.instance_id</code>.
	 */
	public final TableField<CourtInstanceRecord, Integer> INSTANCE_ID = createField("instance_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.court_instance.name</code>.
	 */
	public final TableField<CourtInstanceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "");

	/**
	 * Create a <code>public.court_instance</code> table reference
	 */
	public CourtInstance() {
		this("court_instance", null);
	}

	/**
	 * Create an aliased <code>public.court_instance</code> table reference
	 */
	public CourtInstance(String alias) {
		this(alias, COURT_INSTANCE);
	}

	private CourtInstance(String alias, Table<CourtInstanceRecord> aliased) {
		this(alias, aliased, null);
	}

	private CourtInstance(String alias, Table<CourtInstanceRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CourtInstanceRecord, Integer> getIdentity() {
		return Keys.IDENTITY_COURT_INSTANCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CourtInstanceRecord> getPrimaryKey() {
		return Keys.COURT_INSTANCE_PKEY1;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CourtInstanceRecord>> getKeys() {
		return Arrays.<UniqueKey<CourtInstanceRecord>>asList(Keys.COURT_INSTANCE_PKEY1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CourtInstance as(String alias) {
		return new CourtInstance(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CourtInstance rename(String name) {
		return new CourtInstance(name, null);
	}
}
