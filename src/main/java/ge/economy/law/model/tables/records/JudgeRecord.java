/**
 * This class is generated by jOOQ
 */
package ge.economy.law.model.tables.records;


import ge.economy.law.model.tables.Judge;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JudgeRecord extends UpdatableRecordImpl<JudgeRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1799933821;

	/**
	 * Setter for <code>public.judge.judge_id</code>.
	 */
	public void setJudgeId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.judge.judge_id</code>.
	 */
	public Integer getJudgeId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.judge.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.judge.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.judge.assistant</code>.
	 */
	public void setAssistant(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.judge.assistant</code>.
	 */
	public String getAssistant() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.judge.assistant_phone</code>.
	 */
	public void setAssistantPhone(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.judge.assistant_phone</code>.
	 */
	public String getAssistantPhone() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Judge.JUDGE.JUDGE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Judge.JUDGE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Judge.JUDGE.ASSISTANT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Judge.JUDGE.ASSISTANT_PHONE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getJudgeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAssistant();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getAssistantPhone();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JudgeRecord value1(Integer value) {
		setJudgeId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JudgeRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JudgeRecord value3(String value) {
		setAssistant(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JudgeRecord value4(String value) {
		setAssistantPhone(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JudgeRecord values(Integer value1, String value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached JudgeRecord
	 */
	public JudgeRecord() {
		super(Judge.JUDGE);
	}

	/**
	 * Create a detached, initialised JudgeRecord
	 */
	public JudgeRecord(Integer judgeId, String name, String assistant, String assistantPhone) {
		super(Judge.JUDGE);

		setValue(0, judgeId);
		setValue(1, name);
		setValue(2, assistant);
		setValue(3, assistantPhone);
	}
}
